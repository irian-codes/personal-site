---
import type {GetStaticPaths} from 'astro';
import {Image} from 'astro:assets';
import personPicture from '../../assets/images/irian-cv-image_2022.jpeg';
import CvButton from '../../components/website/CvButton.astro';
import GlowBar from '../../components/website/GlowBar.astro';
import ProjectsSection from '../../components/website/ProjectsSection.astro';
import {languages, type LanguageTag} from '../../i18n/i18n';
import {useTranslations} from '../../i18n/i18nUtils';
import BaseLayout from '../../layouts/BaseLayout.astro';

// We need this special function so Astro can generate a page for each langauge
export const getStaticPaths = (() => {
  return Object.keys(languages).map((lang) => ({
    params: {lang},
  }));
}) satisfies GetStaticPaths;

const locale = Astro.params.lang as LanguageTag;
const t = useTranslations(locale);
---

<BaseLayout title="CV">
  <GlowBar />
  <main>
    <div id="top-section-container">
      <div>
        <h1>
          {t('website.home.title.first-part') + ' '}
          <span id="name-word">{t('website.home.title.second-part')}</span>
        </h1>
        <div class="subheading">
          {t('website.home.subtitle.first-part')}
          <br />
          {t('website.home.subtitle.second-part')}
        </div>
        <CvButton />
      </div>
      <Image
        id="person-picture"
        src={personPicture}
        alt={t('website.home.person-image.alt-attribute')}
      />
    </div>
    <!-- TODO: Translate fixed strings -->
    <h2>My projects</h2>
    <div class="heading-underline" role="presentation"></div>
    <ProjectsSection />
  </main>
</BaseLayout>

<style>
  :root {
    margin: auto;
    padding: 1.5rem;
    max-width: 1200px;
  }
  #top-section-container {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    border-radius: 10px;
    border-color: rgb(var(--accent-color-1));
    border-width: 3px;
    border-style: solid;
    padding: 2rem;
    background-color: rgb(var(--light-background-color));
    overflow: hidden;
    position: relative;
  }
  /* Light reflection CSS effect */
  #top-section-container:before {
    content: '';
    position: absolute;
    top: -100px;
    left: -110px;
    width: 10rem;
    height: 20rem;
    opacity: 0.7;
    transform: rotate(45deg);
    background: linear-gradient(
      to right,
      rgba(var(--accent-color-1), 1) 0%,
      rgba(var(--accent-color-1), 0.15) 70%,
      rgba(var(--accent-color-1), 0.09) 92%,
      rgba(var(--accent-color-1), 0) 100%
    );
  }
  #person-picture {
    width: 200px;
    height: 200px;
    margin-left: 4rem;
    border-color: rgb(var(--accent-color-1));
    border-width: 2px;
    border-radius: 50%;
    border-style: solid;
  }
  #name-word {
    color: rgb(var(--accent-color-1));
    text-shadow: 2px 2px 6px rgba(var(--accent-color-1), 0.7);
  }
</style>
