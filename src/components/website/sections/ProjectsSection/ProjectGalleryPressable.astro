---
import type {Project} from '../../../../data/website/types/ProjectData';
import {getLangFromUrl, useTranslations} from '../../../../i18n/i18nUtils';
import LightGalleryPressable from '../../LightGalleryPressable/LightGalleryPressable.astro';

type Props = {
  project: Project;
};

const {project} = Astro.props;
const locale = getLangFromUrl(Astro.url);
const t = useTranslations(locale);

const subHtml: string = (function buildSubHtml() {
  const title = `<h4>${project.name}</h4>`;
  const description = `<p style="margin: 0.6rem;">${project.description}</p>`;
  const technologies = `<p class="project-technologies">${project.technologies
    .map((tech) => tech.name)
    .join(' | ')}</p>`;

  function buildPublishedUrlsHtml(): string {
    const strings = Array.from(project.publishUrls.entries()).map((entry) => {
      const [key, url] = entry;

      const label = (() => {
        if (url === 'internal') {
          return t(
            'website.home.project-card.button-publish-url.type.internal.label'
          );
        }

        return key.slice(0, 1).toUpperCase() + key.slice(1);
      })();

      if (url.trim().length === 0 || url === 'internal') {
        return `<div style="display: inline">${label}</div>`;
      }

      return `<a href=${url} target="_blank" rel="noopener noreferrer external">
          ${label + ' link'}
        </a>`;
    });

    const divider = '<div style="display: inline; margin: 0 0.2rem">|</div>';

    const urlsHtml = `<div class="project-published-urls-container" style="font-size: 0.8rem; margin-top: 0.6rem">${
      `${t('website.home.project-card.gallery.published-text')}: ` +
      strings.join(divider)
    }</div>`;

    return urlsHtml;
  }

  const publishedUrls =
    project.publishUrls.size > 0 ? buildPublishedUrlsHtml() : '';

  return title + description + technologies + publishedUrls;
})();
---

<LightGalleryPressable
  galleryId={`project-${project.id}`}
  entries={project.images.map((image) => ({
    src: image.src,
    subHtml,
  }))}
>
  <slot />
</LightGalleryPressable>
