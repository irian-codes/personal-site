<div id="stars-bg-container">
  <!-- Inspired by https://codepen.io/mattmarble/pen/qBdamQz -->
  <div id="stars-far"></div>
  <div id="stars-close"></div>
  <!-- Inspired by https://codepen.io/delroyprithvi/pen/LYyJROR -->
  <div id="shooting-star-model" class="shooting-star">
    <div class="shooting-star-tail"></div>
  </div>
</div>

<script>
  import setRandomInterval from 'set-random-interval';
  import {getRandomInt} from '../../utils/MathUtils';

  function spawnShootingStar() {
    if (document.hidden || document.visibilityState === 'hidden') {
      return;
    }

    const bgContainer = document.getElementById('stars-bg-container')!;
    const clonedStarNode = document
      .getElementById('shooting-star-model')
      ?.cloneNode(true) as HTMLElement;

    clonedStarNode.id = '';
    const clonedStarTail = clonedStarNode.querySelector(
      '.shooting-star-tail'
    ) as HTMLElement;

    const animationMaxDurationInSeconds = 10;

    clonedStarNode.style.display = 'block';
    clonedStarNode.style.animationDuration = `${
      Math.floor(Math.random() * animationMaxDurationInSeconds) + 1
    }s`;

    clonedStarNode.style.height = `${getRandomInt(3, 6)}px`;
    clonedStarNode.style.width = clonedStarNode.style.height;
    clonedStarTail.style.height = `${Math.round(
      parseInt(clonedStarNode.style.height) / 2
    )}px`;

    // Setting a min 10% since otherwise it's not seen by the user
    clonedStarNode.style.left = `${getRandomInt(10, 100)}%`;

    // Removing node so it doesn't saturate the DOM
    clonedStarNode.addEventListener('animationend', () => {
      clonedStarNode.remove();
    });

    bgContainer.appendChild(clonedStarNode);
  }

  // Call spawnShootingStar function randomly
  setRandomInterval(spawnShootingStar, 1 * 1000, 8 * 1000);
</script>

<style>
  #stars-bg-container {
    position: fixed;
    inset: 0 0 0 0;
    width: 100%;
    height: 100%;
    overflow: visible;
    z-index: -10;
  }

  /* STARRY BACKGROUND */

  #stars-close {
    width: 3px;
    height: 3px;
    background: transparent;

    /* custom 'postcss-function' */
    /* stylelint-disable-next-line function-no-unknown, function-name-case */
    box-shadow: multipleBoxShadow(125, rgb(var(--heading-color-2)), 1, 2500);
    animation: bg-animation 125s linear infinite;
  }

  #stars-far {
    width: 2px;
    height: 2px;
    background: transparent;

    /* custom 'postcss-function' */
    /* stylelint-disable-next-line function-no-unknown, function-name-case */
    box-shadow: multipleBoxShadow(250, rgb(var(--heading-color-2)), 1, 2500);
    animation: bg-animation 190s linear infinite;
  }

  /* SHOOTING STARS */

  #shooting-star-model {
    display: none;
  }

  .shooting-star {
    position: fixed;
    top: 0%;
    width: 4px;
    height: 4px;
    background: rgb(var(--heading-color-2));
    border-radius: 50%;
    box-shadow:
      0 0 0 4px rgb(var(--heading-color-2) / 10%),
      0 0 0 8px rgb(var(--heading-color-2) / 10%),
      0 0 20px rgb(var(--heading-color-2) / 10%);
    animation: shooting-star-animation 3s linear;
  }

  .shooting-star-tail {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    width: 300px;
    height: 1px;
    background: linear-gradient(
      90deg,
      rgb(var(--heading-color-2)),
      transparent
    );
  }

  /* ANIMATIONS */
  @keyframes bg-animation {

    from {
      transform: translateY(0);
    }

    to {
      transform: translateY(-2000px);
    }
  }

  @keyframes shooting-star-animation {

    0% {
      transform: rotate(315deg) translateX(0);
      opacity: 1;
    }

    70% {
      opacity: 1;
    }

    100% {
      transform: rotate(315deg) translateX(-2000px);
      opacity: 0;
    }
  }
</style>
