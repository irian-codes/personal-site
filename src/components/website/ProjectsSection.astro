---
import {Image} from 'astro:assets';
import {projectsData} from '../../data/website/ProjectsData';

const projects = projectsData.data.find(
  (project) => project.langTag === 'en'
)!.content;
---

<div id="projects-section-container">
  <div class="projects-grid">
    {
      projects.map((project, index) => (
        <div class:list={{'project-container': true, hidden: index > 2}}>
          <Image class="project-image" src={project.image} alt="" />
          <div class="project-overlay">
            <h3 class="project-title">{project.name}</h3>
            <div class="project-description-container">
              <p>{project.description}</p>
              <div class="project-technologies-container">
                {project.technologies.map((technology) => (
                  <div class="project-technology-container">
                    <div class="project-technology-name">{technology.name}</div>
                    <Image
                      class="project-technology-icon"
                      src={technology.icon}
                      alt={`${technology.name} logo`}
                    />
                  </div>
                ))}
              </div>
            </div>
          </div>
        </div>
      ))
    }
  </div>
  {
    projects.length > 3 && (
      <div>
        <button id="view-more-button">View more</button>
        <button id="hide-button">Hide projects</button>
      </div>
    )
  }
</div>

<script>
  (function viewHideProjectsButtonOnClick() {
    const viewMoreButton = document.getElementById('view-more-button');
    const hideButton = document.getElementById('hide-button');
    const visibleProjectsAmount = 3;

    if (viewMoreButton == null || hideButton == null) {
      return;
    }

    hideButton.style.display = 'none';

    function showMoreProjects() {
      const projects = Array.from(
        document.querySelectorAll('.project-container')
      );

      projects.forEach((pr) => pr.classList.remove('hidden'));

      viewMoreButton!.style.display = 'none';
      hideButton!.style.display = 'block';
    }

    function hideProjects() {
      const projects = Array.from(
        document.querySelectorAll('.project-container')
      );

      projects.forEach((pr, index) => {
        if (index >= visibleProjectsAmount) {
          pr.classList.add('hidden');
        }
      });

      hideButton!.style.display = 'none';
      viewMoreButton!.style.display = 'block';
    }

    viewMoreButton.addEventListener('click', showMoreProjects);
    hideButton.addEventListener('click', hideProjects);
  })();
</script>

<style>
  #projects-section-container {
    margin-top: 2rem;
  }
  .hidden {
    display: none;
  }
  h2 {
    text-align: center;
  }
  .projects-grid {
    display: grid;
    grid-template-columns: 1fr;
    grid-auto-flow: row;
    gap: 2rem;
    justify-content: center;
    align-content: center;
  }
  .project-image {
    width: 100%;
    height: auto;
    max-height: 40rem;
    border-radius: 10px;
    image-rendering: optimizeQuality;
    object-position: center;
    object-fit: cover;
  }
  .project-container {
    margin: auto;
    position: relative;
  }
  /* Selected project glow effect */
  .project-container::after {
    content: '';
    position: absolute;
    top: 48%;
    left: 1%;
    width: 98%;
    height: 5%;
    border-radius: 50%;
    opacity: 0;
    transition: opacity 0.6s;
    box-shadow: 0 0 10rem 8rem rgb(var(--accent-color-1));
    z-index: -1;
  }
  /* TODO: Adapt to devices that can't hover, aka touch devices */
  .project-container:hover::after {
    opacity: 0.8;
  }
  .project-overlay {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    padding: 10px;
    background-color: rgba(0, 0, 0, 0.7);
    color: white;
    text-align: left;
  }
  .project-title {
    margin: 0.4rem 0 0.5rem 0;
  }
  .project-description-container {
    visibility: hidden;
    height: auto;
    max-height: 0;
    opacity: 0;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    overflow: auto;
    justify-content: space-between;
    transition:
      max-height 0.6s,
      opacity 0.6s 0.3s;
  }
  /* TODO: Adapt to devices that can't hover, aka touch devices */
  .project-container:hover .project-description-container {
    visibility: unset;
    opacity: 1;
    max-height: 10rem; /* More than necessary but not too much */
  }
  .project-technologies-container {
    display: flex;
    flex-direction: row;
    align-items: center;
  }
  .project-technology-container {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    margin-right: 15px;
    background-color: rgb(var(--heading-color-2));
    border-radius: 5px;
    color: black;
    padding: 10px;
  }
  .project-technology-name {
    margin-right: 5px;
    white-space: nowrap;
  }
  .project-technology-icon {
    width: 2rem;
    height: 2rem;
    object-fit: contain;
  }
</style>
